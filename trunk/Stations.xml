<?xml version="1.0" ?>
<!DOCTYPE TranscendenceExtension
[
	<!ENTITY modBoCStations                 "0xEFFF2100">
	<!ENTITY stAnomoly      	            "0xEFFF2001">
	<!ENTITY stFounderGateControl	        "0xEFFF2002">
	<!ENTITY stPegasusStargate   	 	    "0xEFFF2003">
	<!ENTITY stPegasusFarStargate    	    "0xEFFF2004">
	<!ENTITY stTriadTradeDepot              "0xEFFF2105">
	<!ENTITY stFounderAlien     	        "0xEFFF2006">

	<!ENTITY rsAnomoly      	            "0xEFFFF001">
	<!ENTITY rsFounderGateControl  	        "0xEFFFF002">
	<!ENTITY rsFounderAlien      	        "0xEFFFF003">
	<!ENTITY evHubTrafficBehavior    	    "0xEFFF8001">
	<!ENTITY tbHubTraffic      	            "0xEFFF8011">

]>
<TranscendenceExtension UNID="&modBoCStations;" version="1.0" name="BoC Stations" credits="Everyone">

<!--  ###################################################################
      UNID SPACE
      ###################################################################

	0xEFFF - T - III

	T		Type ID. Within a module, the division of the namespace is
			undefined. Transcendence uses this value to represent the
			type of object assigned an UNID:

			0	star system description
			1	sovereigns
			2	station types
			3	ship classes
			4	item types
			5	special item types (virtuals)

			8	random tables (items, encounters)
			9	effects, energy fields, space env, etc
			A	dock screens
			B	powers

			F	images and sound resources
            

            
Adventure Setup:
  0xEFFF0001 - 0xEFFF0009
Systems:
  0xEFFF0010 - 0xEFFF0100
PlayerShips:
  0xEFFFA000 - 0xEFFFA100
Planets and stars
  0xEFFF2000 - 0xEFFF2100
Stations (structures)
  0xEFFF2101 - 0xEFFF2FFF
Graphics
  0xEFFFF000 - 0xEFFFFFFF
    
-->
	<!-- Triad Trade Depot -->

	<StationType UNID="&stTriadTradeDepot;"
			name=				"Triad Trade Depot"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"

			multiHull=			"true"
			immutable=			"true"

			noArticle=			"true"
			>

		<Image imageID="&rsStations7;" imageX="0" imageY="768" imageWidth="256" imageHeight="256"/>

		<Trade currency="credit" creditConversion="100" max="10000000" replenish="50000">
			<Sell	criteria="*U -Illegal; -ID; -NotForSale;"	priceAdj="115"/>
			<Buy	criteria="*U -Illegal; -ID; -NotForSale;"	priceAdj="50"/>
		</Trade>
        
		<DockScreens>

			<Main
				name=			"=(objGetName gSource)"
				>

				<Panes>
					<Default
							desc=	"You are docked at a the Triad's main commercial hub.  Virtually anything that can be bought or sold is available here, at a price, of course.">

						<Actions>
							<Action name="Buy Equipent" default="1" key="E">
                                (scrShowPane gScreen 'Equipment)
							</Action>
							<Action name="Buy Goods" key="G">
                                (scrShowPane gScreen 'Goods)
							</Action>
							<Action name="Undock" cancel="1" key="U">
								<Exit/>
							</Action>

						</Actions>

					</Default>
                
                    <Equipment
                        desc=	"The triad merchants spend months travelling to all the frontier systems, gathering the most exotic and sought after items in Pegasus.">

                        <Actions>
                            <Action name="Buy Weapons" default="1" key="W">
                                (scrShowPane gScreen 'Weapons)
                            </Action>
                            <Action name="Buy Armor" key="A">
                                (scrShowPane gScreen 'Armor)
                            </Action>
                            <Action name="Buy Shields" key="S">
                                (scrShowPane gScreen 'Shield)
                            </Action>
                            <Action name="Buy misc device" key="M">
                                (scrShowPane gScreen 'Device)
                            </Action>
                            <Action name="Back" cancel="1" key="B">
                                <ShowPane pane="Default"/>
                            </Action>

                        </Actions>
                    </Equipment>
                    
                    <Weapons
                        desc=	"What kind of weapon would you like to purchase?">
                        <Actions>
                            <Action name="Lasers" default="1" key="L">
                                (comShowBuyScreen 
                                    "w+damageType:laser,-Alien,-Illegal,-Military"	; items sold to player
                                    "Main"					; return screen
                                    
                                    '(	"wl"					; install devices
                                        12					; of level 12 (and below)
                                        Nil					; no special tech modifiers
                                        True				; check for military ID
                                        0)					; install cost margin
                                    )
                            </Action>
                            <Action name="Mass Drivers" key="M">
                                (comShowBuyScreen 
                                    "w+damageType:kinetic,-Alien,-Illegal,-Military"	; items sold to player
                                    "Main"					; return screen
                                    
                                    '(	"wl"					; install devices
                                        12					; of level 12 (and below)
                                        Nil					; no special tech modifiers
                                        True				; check for military ID
                                        0)					; install cost margin
                                    )
                            </Action>
                            <Action name="Particle emitters" key="P">
                                (comShowBuyScreen 
                                    "wl+damageType:particle,-Alien,-Illegal,-Military"	; items sold to player
                                    "Main"					; return screen
                                    
                                    '(	"wl"				; install devices
                                        12					; of level 12 (and below)
                                        Nil					; no special tech modifiers
                                        True				; check for military ID
                                        0)					; install cost margin
                                    )
                            </Action>
                            <Action name="Blasters" key="B">
                                (comShowBuyScreen 
                                    "wl+damageType:blast,-Alien,-Illegal,-Military"	; items sold to player
                                    "Main"					; return screen
                                    
                                    '(	"wl"				; install devices
                                        12					; of level 12 (and below)
                                        Nil					; no special tech modifiers
                                        True				; check for military ID
                                        0)					; install cost margin
                                    )
                            </Action>
                            <Action name="Ion beams" key="I">
                                (comShowBuyScreen 
                                    "wl+damageType:ion,-Alien,-Illegal,-Military"	; items sold to player
                                    "Main"					; return screen
                                    
                                    '(	"wl"				; install devices
                                        12					; of level 12 (and below)
                                        Nil					; no special tech modifiers
                                        True				; check for military ID
                                        0)					; install cost margin
                                    )
                            </Action>
                            <Action name="Missile Launchers" key="C">
                                (comShowBuyScreen 
                                    "l-Alien,-Illegal,-Military"                 	; items sold to player
                                    "Main"					; return screen
                                    
                                    '(	"wl"					; install devices
                                        12					; of level 12 (and below)
                                        Nil					; no special tech modifiers
                                        True				; check for military ID
                                        0)					; install cost margin
                                    )
                            </Action>
                            <Action name="Special" key="S">
                                (comShowBuyScreen 
                                    "w+Alien"                 	; items sold to player
                                    "Main"					; return screen
                                    
                                    '(	"wl"					; install devices
                                        12					; of level 12 (and below)
                                        Nil					; no special tech modifiers
                                        True				; check for military ID
                                        0)					; install cost margin
                                    )
                            </Action>
                            <Action name="Back" cancel="1" key="B">
                                <ShowPane pane="Default"/>
                            </Action>
                        </Actions>
                    </Weapons>
                    
                    <Armor
                        desc=	"What kind of armor would you like to purchase?">
                        <Actions>
                            <Action name="Light" default="1" key="L">
                                (comShowBuyScreen 
                                    "a &lt;=#2500"						; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Medium" default="1" key="M">
                                (comShowBuyScreen 
                                    "a &gt;=#2500, &lt;=#5000"						; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Heavy" default="1" key="H">
                                (comShowBuyScreen 
                                    "a &gt;=#5000, &lt;=#10000"						; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Massive" default="1" key="M">
                                (comShowBuyScreen 
                                    "a &gt;=#10000"						; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Back" cancel="1" key="B">
                                <ShowPane pane="Default"/>
                            </Action>
                        </Actions>
                    </Armor>
                    
                    <Shield
                        desc=	"What kind of shield would you like to purchase?">
                        <Actions>
                            <Action name="Light" default="1" key="L">
                                (comShowBuyScreen 
									(lambda (theItem)
										(switch
											(and (leq (itmGetLevel theItem) 3) (itmMatches theItem "s-Alien"))
												100
												
											Nil
											)
										)
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Medium" key="M">
                                (comShowBuyScreen 
									(lambda (theItem)
										(switch
											(and (gr (itmGetLevel theItem) 3) (leq (itmGetLevel theItem) 5) (itmMatches theItem "s-Alien"))
												100
												
											Nil
											)
										)
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Heavy" key="H">
                                (comShowBuyScreen 
									(lambda (theItem)
										(switch
											(and (gr (itmGetlevel theItem) 5) (leq (itmGetLevel theItem) 8) (itmMatches theItem "s-Alien"))
												100
												
											Nil
											)
										)
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Massive" key="M">
                                (comShowBuyScreen 
									(lambda (theItem)
										(switch
											(and (gr (itmGetlevel theItem) 8) (leq (itmGetLevel theItem) 11) (itmMatches theItem "s-Alien"))
												100
												
											Nil
											)
										)
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Back" cancel="1" key="B">
                                <ShowPane pane="Default"/>
                            </Action>
                        </Actions>
                    </Shield>
                    
                    <Device
                        desc=	"What kind of device would you like to purchase?">
                        <Actions>
                            <Action name="Reactor" default="1" key="R">
                                (comShowBuyScreen 
                                    "r"						; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Drive" key="D">
                                (comShowBuyScreen 
                                    "v"						; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Weapon enhancer" key="W">
                                (comShowBuyScreen 
                                    "db~aswrv"						; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            
                            <Action name="Back" cancel="1" key="B">
                                <ShowPane pane="Default"/>
                            </Action>

                        </Actions>
                    </Device>

                    <Goods
                        desc=	"You are docked at a the Triad's main commercial hub.  Virtually anything that can be bought or sold is available here, at a price, of course.">
                        <Actions>
                            <Action name="Buy Food" default="1" key="F">
                                (comShowBuyScreen 
                                    "*+Food"				; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Buy Medical supplies" key="M">
                                (comShowBuyScreen 
                                    "*+Meds;"				; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Buy Ore" key="O">
                                (comShowBuyScreen 
                                    "*+Res;"				; items sold to player
                                    "Main"					; return screen
                                )
                            </Action>
                            <Action name="Back" cancel="1" key="B">
                                <ShowPane pane="Default"/>
                            </Action>

                        </Actions>
                    </Goods>
				</Panes>
			</Main>

		</DockScreens>
        
        <Events>
            <OnCreate>
                (block Nil
                    (sysAddObjTimerEvent (random 3 15) gSource 'Restock)
                    (sysAddObjRecurringTimerEvent (random 5000 10000) gSource 'Restock)
                )
            </OnCreate>
            
            <Restock>
                (block Nil
                    (if (objIsDockedAt gPlayerShip gSource)
                        (sysAddObjTimerEvent 30 gSource 'Restock)
                        (block (oldItms itmCount newItmsUnid newItms)
                        
                            ;; make a list of everything we have, and sell some of it
                            (setq oldItms (objgetItems gSource "U"))
                            (if oldItms
                                (enum oldItms itm (block (rand)
                                    (setq rand (random 1 100))
                                    (if (gr rand 90)
                                        (switch
                                            (geq (itmGetCount itm) (multiply 5 (itmGetMaxAppearing itm)))
                                                (setq itmCount (divide (multiply 5 (itmGetMaxAppearing itm)) (random 2 4)))
                                                
                                            (geq (itmGetCount itm) (multiply 3 (itmGetMaxAppearing itm)))
                                                (setq itmCount (divide (multiply 4 (itmGetMaxAppearing itm)) (random 1 3)))
                                                
                                            (geq (itmGetCount itm) (multiply 2 (itmGetMaxAppearing itm)))
                                                (setq itmCount (divide (multiply 3 (itmGetMaxAppearing itm)) (random 1 2)))
                                                
                                            (geq (itmGetCount itm) (itmGetMaxAppearing itm))
                                                (setq itmCount (divide (multiply 2 (itmGetMaxAppearing itm)) 4))
                                                
                                            (geq (itmGetCount itm) (itmGetAverageAppearing itm))
                                                (setq itmCount (random 1 (itmGetCount itm)))
                                            
                                            (eq (itmGetcount itm) 1)
                                                (setq itmCount (random 0 0 0 0 1 1))
                                        )
                                    )
                                    (objRemoveItem gSource itm itmCount)
                                    (objCredit gSource (multiply (objGetSellPrice gSource itm) itmcount))
                                ))
                            )
                            
                            ;;
                            ;; the main trade stations are all unique, so their item lists will be modified individually
                            ;; trade stations will all have the same items so that will be easy enough
                            ;;
                            (setq newItmsUnid (typFind "i -info,-notForSale,-illegal,-alien"))
                            (setq newItms (list))
                            (enum newItmsUnid itm (lnkappend newItms (itmCreate itm 1)))
                            (enum newItms itm (block (rand)
                                (setq rand (random 1 100))
                                (if (gr rand 10)
                                    (switch
                                        (or
                                            (itmMatches itm "w")
                                            (itmMatches itm "s")
                                            (itmMatches itm "a")
                                            (itmMatches itm "d")
                                            (itmMatches itm "r")
                                            (itmMatches itm "v")
                                        )
                                            (objAddItem gSource itm (itmGetAverageAppearing itm))
                                        (or
                                            (itmMatches itm "u")
                                            (itmMatches itm "t")
                                            (itmMatches itm "m")
                                            (itmMatches itm "f")
                                        )
                                            (objAddItem gSource itm (random 20 100))  ;(multiply (itmGetAverageAppearing itm) (random 5 10)))
                                    )
                                )
                            ))
                        )
                    )
                )
            </Restock>
        </Events>

		<DockingPorts>
			<Port x="79"	y="75" />
			<Port x="0"		y="100" />
			<Port x="-73"	y="74" />
			<Port x="-109"	y="0" />
			<Port x="-87"	y="-75" />
			<Port x="0"		y="-109" />
			<Port x="82"	y="-82" />
			<Port x="109"	y="8" />
		</DockingPorts>
	</StationType>
    
    
<!----              Resources           --->
<Image UNID="&rsAnomoly;"	bitmap="resources\nova5.bmp" bitmask="resources\nova5mask.bmp"/>


	<StationType UNID="&stAnomoly;"
		name=				"(star)"
		scale=				"star"
		backgroundObject=	"true" 
		sovereign=			"&svIndependent;"

		attributes=			"star; anomaly"
		>
    <Image			imageID="&rsAnomoly;" imageX="0" imageY="0" imageWidth="256" imageHeight="256" imageFrameCount="5" imageTicksPerFrame="2"/>
	</StationType>
	
		<!-- Founder Alien Stations -->

	<StationType UNID="&stFounderAlien;"
			name=				"Founder Station"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"

			multiHull=			"true"
			immutable=			"true"
			attributes=			"founderAlien; founder; populated"
			noArticle=			"true"
			>

		<Image imageID="&rsStations7;" imageX="0" imageY="768" imageWidth="256" imageHeight="256"/>

		<DockScreens>

			<Main
				name=			"=(objGetName gSource)"
				>

				<Panes>
					<Default
							desc=	"You are docked at one of the alien stations occupied by the Founders. A large energy barrier sepparates the public docking bay with the station's interior. Because this is just a placeholder text. BTW - someone make sure wolfy gets the new graphics by sunday. :3">

						<Actions>
							<Action name="Undock" cancel="1" key="U">
								<Exit/>
							</Action>

						</Actions>

					</Default>
				</Panes>
			</Main>

		</DockScreens>

		<DockingPorts>
			<Port x="79"	y="75" />
			<Port x="0"		y="100" />
			<Port x="-73"	y="74" />
			<Port x="-109"	y="0" />
			<Port x="-87"	y="-75" />
			<Port x="0"		y="-109" />
			<Port x="82"	y="-82" />
			<Port x="109"	y="8" />
		</DockingPorts>
	</StationType>

		<!-- Tan Ru Dorem -->

	<StationType UNID="&stFounderGateControl;"
			name=				"Alien Far-Gate Control Center"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"

			multiHull=			"true"
			immutable=			"true"
			attributes=			"founder; founderAlien; founderFarGateControl; populated"
			noArticle=			"true"
			>

		<Image imageID="&rsStations7;" imageX="0" imageY="768" imageWidth="256" imageHeight="256"/>

		<Events>
			<OnCreate>
				(block Nil
					(enum (sysFindObject gSource "T +founder") theObj
						(block Nil
							; Create some visiting ships
							(for i 1 (random 2 3)
								(block (theShip)
									(setq theShip (sysCreateShip 
										&tbHubTraffic;
										(sysVectorPolarOffset theObj (random 0 359) 10)
										&svCommonwealth;
										&evHubTrafficBehavior;
										))
										
									(setq aDockObj theObj)
									(objFireEvent theShip "OrderDockAtHub")
									)
								)
							
							; Register for events from all the objects that make up
							; the arcology
							(objRegisterForEvents gSource theObj)
							)
						)
						
					; Register a callbacks
					(sysAddObjRecurringTimerEvent 90 gSource "OnTrafficControl")
					)
			</OnCreate>
			<OnTrafficControl>
				(block (totalShips)
					; Count the number of ships under traffic control
					(setq totalShips (count (sysFindObject Nil "s D:0010201F_status")))
					
					; If less than the ideal number, new ships jump in
					(if (ls totalShips 200)
						(block (theShip theTarget)
							(setq theShip (sysCreateShip 
								&tbHubTraffic;
								(random (sysFindObject Nil "G"))
								&svCommonwealth;
								&evHubTrafficBehavior;
								))
								
							(objFireEvent theShip "OrderEnterSystem")
							)
						)
					)
			</OnTrafficControl>
		</Events>
		
		<DockScreens>

			<Main
				name=			"=(objGetName gSource)"
				>

				<Panes>
					<Default
							desc=	"You are docked at the station the founders use to control the Far-Gate network. From here, they can activate and deactivate the gates at will. A puppy is sitting in the docking bay, waiting for Wolfy to get the new graphics done. :3">

						<Actions>
							<Action name="Undock" cancel="1" key="U">
								<Exit/>
							</Action>

						</Actions>

					</Default>
				</Panes>
			</Main>

		</DockScreens>

		<DockingPorts>
			<Port x="79"	y="75" />
			<Port x="0"		y="100" />
			<Port x="-73"	y="74" />
			<Port x="-109"	y="0" />
			<Port x="-87"	y="-75" />
			<Port x="0"		y="-109" />
			<Port x="82"	y="-82" />
			<Port x="109"	y="8" />
		</DockingPorts>
	</StationType>
	
		<!-- Majellen Stargate -->

	<StationType UNID="&stPegasusFarStargate;"
			name=				"(stargate)"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"
			dockingPorts=		"4"

			multiHull=			"true"
			immutable=			"true"
			attributes=			"pegasus; farGate"

			gateEffect=			"&efStargateOut;"

			definiteArticle=	"true"
			>
		<Image imageID="&rsStargate;" imageX="0" imageY="128" imageWidth="192" imageHeight="192" imageFrameCount="12" imageTicksPerFrame="3"/>

		<DockScreens>

			<Main
				name=			"=(objGetName gSource)"
				>

				<Panes>
					<Default
							desc=	"You are docked at an alien stargate, one that is connected to the Pegasus Far-Gate Network of stargates. These gates are controlled by the Triad from the control station in the Hub. Use of this gate comes at a price.">

						<Actions>
							<Action name="Undock" cancel="1" key="U">
								<Exit/>
							</Action>

						</Actions>

					</Default>
				</Panes>
			</Main>

		</DockScreens>

	</StationType>

    <!-- Tables & Behaviors -->
    
    <!-- HUB Traffic -->
    
    <!-- BEHAVIORS -->

	<ShipClass UNID="&evHubTrafficBehavior;"
			class=				"(Hub traffic behavior)"
			virtual=			"true"
			
			attributes=			"behaviorClass"
			>

		<Events>
			<OrderDockAtHubStation>
				(block Nil
					(shpOrder gSource 'dock aDockObj)
					(shpOrder gSource 'wait (random 10 200))
					(objSetData gSource "0010201F_status" 'dockedAtHub)
					)
			</OrderDockAtHubStation>
			
			<OrderEnterSystem>
				(objSetData gSource "0010201F_status" 'enteredSystem)
			</OrderEnterSystem>
			
			<OnOrdersCompleted>
				(block (status dockedAt allLoot)
					; Different order depending on our current state
					(setq status (objGetData gSource "0010201F_status"))
					(setq dockedAt (shpGetDockObj gSource))
					
					; If we're docked at an object, dump any loot that we found
					(if (and dockedAt
							(objHasAttribute dockedAt "populated")
							
							; Compose a list of all loot on board that the station
							; might want to buy from us.
							
							(setq allLoot (filter (objGetItems gSource "*~mf U") theItem
								(objGetBuyPrice dockedAt theItem)
								))
							)
						(block Nil
							(enum allLoot theItem (objRemoveItem gSource theItem))
							(enum allLoot theItem (objAddItem dockedAt theItem))
							)
						)
					
					; Figure out what to do next
					(switch
						(eq status 'enteredSystem)
							(block Nil
								(setq theTarget (random (sysFindObject gSource "T +founderAlien")))
								(shpOrder gSource 'orbit (sysFindObject Nil "+anomaly;") 25 (random 20 40))
								(shpOrder gSource 'dock theTarget)
								(shpOrder gSource 'wait (random 10 60))
								(objSetData gSource "0010201F_status" 'dockedAtHub)
								)
								
						(eq status 'dockedAtHub)
							(block (roll allWrecks)
								; When leaving new victoria, orbit around for a bit
								(shpOrder gSource 'orbit (shpGetDockObj gSource) 5 (random 10 20))
								
								; Randomly choose a path
								(setq roll (random 1 100))
								(switch
									; Gate out
									(leq roll 30)
										(block Nil
											(shpOrder gSource 'gate)
											(objSetData gSource "0010201F_status" 'leavingSystem)
											)
											
									; If there are wrecks in the area, loot them
									(and (leq (objGetDestiny gSource) 180)
											(not (objHasAttribute gSource "freighter"))
											(leq (random 1 100) 50)
											
											; Compose a list of all wrecks in the area
											
											(setq allWrecks (filter (sysFindObject gSource "TK N:100; +shipwreck; -uncharted; -locked;") theObj
												(not (objGetData theObj "0010201F_marked"))
												))
											)
										(block (destObj)
											(setq destObj (random allWrecks))
											(shpOrder gSource 'loot destObj)
											(objSetData destObj "0010201F_marked" True)
											(objSetData gSource "0010201F_status" 'dockedAtStation)
											)
											
									; Dock at a random station in the system
									(block (theTarget)
										(setq theTarget (random (sysFindObject gSource "TAF +populated; -founderAlien; -anomaly;")))
										(shpOrder gSource 'dock theTarget)
										(shpOrder gSource 'wait (random 10 20))
										(objSetData gSource "0010201F_status" 'dockedAtStation)
										)
									)
								)
								
						(eq status 'dockedAtStation)
							(block (roll allWrecks)
								; Randomly choose a path
								(setq roll (random 1 100))
								(switch
									; Gate out
									(leq roll 30)
										(block Nil
											(shpOrder gSource 'gate)
											(objSetData gSource "0010201F_status" 'leavingSystem)
											)
											
									; If there are wrecks in the area, loot them
									(and (leq (objGetDestiny gSource) 180)
											(not (objHasAttribute gSource "freighter"))
											(leq (random 1 100) 50)
											
											; Compose a list of all wrecks in the area
											
											(setq allWrecks (filter (sysFindObject gSource "TK N:100; +shipwreck; -uncharted; -locked;") theObj
												(not (objGetData theObj "0010201F_marked"))
												))
											)
										(block (destObj)
											(setq destObj (random allWrecks))
											(shpOrder gSource 'loot destObj)
											(objSetData destObj "0010201F_marked" True)
											(objSetData gSource "0010201F_status" 'dockedAtStation)
											)
											
									; Dock at founder stations
									(leq roll 80)
										(block (theTarget)
											(setq theTarget (random (sysFindObject gSource "T +founderAlien")))
											(shpOrder gSource 'orbit (sysFindObject Nil "+anomaly;") 20 (random 20 40))
											(shpOrder gSource 'dock theTarget)
											(shpOrder gSource 'wait (random 10 60))
											(objSetData gSource "0010201F_status" 'dockedAtHub)
											)
											
									; Dock at a random station in the system
									(block (theTarget)
										(setq theTarget (random (sysFindObject gSource "TAF +populated; -founderAlien; -anomaly;")))
										(shpOrder gSource 'dock theTarget)
										(shpOrder gSource 'wait (random 10 20))
										(objSetData gSource "0010201F_status" 'dockedAtStation)
										)
									)
								)
						)
						
					; If we were docked at an object that we just looted, then destroy the object
					(if (objGetData dockedAt "0010201F_marked")
						(objDestroy dockedAt gSource)
						)
					)
			</OnOrdersCompleted>
		</Events>
	</ShipClass>
	
<!-- SHIP TABLES -->

	<ShipTable unid="&tbHubTraffic;">
		<Table>
			<Ship chance="2"	class="&scAntaresI;"/>
			<Ship chance="4"	class="&scAntaresII;"/>
			<Ship chance="3"	class="&scAntaresV;"/>
			<Ship chance="3"	class="&scEI7000;"/>
			<Ship chance="8"	class="&scEI500;"/>
			<Ship chance="9"	class="&scEI200;"/>
			<Ship chance="14"	class="&scEI100;"/>
			<Ship chance="5"	class="&scIAVLight;"/>
			<Ship chance="10"	class="&scIAVMedium;"/>
			<Ship chance="5"	class="&scIAVHeavy;"/>
			<Ship chance="10"	class="&scSapphireYacht;"/>
			<Ship chance="3"	class="&scScarabFreighter;"/>
			<Ship chance="14"	class="&scRoninB;"/>
			<Ship chance="10"	class="&scWolfen;"/>
		</Table>
	</ShipTable>
</TranscendenceExtension>